{"ast":null,"code":"var _jsxFileName = \"/home/everett/acm-website/src/components/EventCard.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst extractImageUrl = description => {\n  if (!description) return null;\n\n  // Match Google Drive file links: drive.google.com/file/d/FILE_ID/view\n  const driveMatch = description.match(/https:\\/\\/drive\\.google\\.com\\/file\\/d\\/([\\w-]+)\\/view/);\n\n  // Match Google Drawings links: docs.google.com/drawings/d/FILE_ID/edit\n  const drawingMatch = description.match(/https:\\/\\/docs\\.google\\.com\\/drawings\\/d\\/([\\w-]+)\\/edit/);\n  const fileId = (driveMatch === null || driveMatch === void 0 ? void 0 : driveMatch[1]) || (drawingMatch === null || drawingMatch === void 0 ? void 0 : drawingMatch[1]);\n  return fileId ? `https://drive.google.com/uc?export=view&id=${fileId}` : null;\n};\nconst cleanDescription = description => {\n  if (!description) return \"\";\n  // Remove Google Drive and Drawing URLs from the visible text\n  return description.replace(/https:\\/\\/drive\\.google\\.com\\/file\\/d\\/[\\w-]+\\/view[^\\s]*/g, \"\").replace(/https:\\/\\/docs\\.google\\.com\\/drawings\\/d\\/[\\w-]+\\/edit[^\\s]*/g, \"\").trim();\n};\nconst EventCard = ({\n  event\n}) => {\n  var _event$attachments, _event$attachments$, _event$attachments$$f;\n  const {\n    summary,\n    start,\n    end,\n    description,\n    location\n  } = event;\n  const startDate = new Date(start.dateTime || start.date);\n  const endDate = end !== null && end !== void 0 && end.dateTime ? new Date(end.dateTime) : null;\n  const formatDate = date => date.toLocaleDateString(undefined, {\n    weekday: \"long\",\n    month: \"long\",\n    day: \"numeric\"\n  });\n  const formatTime = date => date ? date.toLocaleTimeString(undefined, {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    hour12: true\n  }) : \"All day\";\n\n  // const imageUrl = extractImageUrl(description);\n  const imageUrl = extractImageUrl(description) || ((_event$attachments = event.attachments) !== null && _event$attachments !== void 0 && (_event$attachments$ = _event$attachments[0]) !== null && _event$attachments$ !== void 0 && (_event$attachments$$f = _event$attachments$.fileUrl) !== null && _event$attachments$$f !== void 0 && _event$attachments$$f.includes(\"drive.google.com\") ? event.attachments[0].fileUrl.replace(\"open?\", \"uc?export=view&\") : null);\n  const cleanDesc = cleanDescription(description);\n  console.log(\"Full event object:\", event);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white shadow-lg rounded-2xl p-5 border border-gray-200 mb-4 text-acm-dark-blue\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold\",\n      children: summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-acm-blue\",\n      children: [formatDate(startDate), \", \", formatTime(startDate), endDate ? ` - ${formatTime(endDate)}` : \"\", \", \", location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: `${summary} visual`,\n      className: \"mt-3 w-full max-h-60 object-contain rounded-xl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), cleanDesc && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 text-gray-800\",\n      children: cleanDesc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_c = EventCard;\nexport default EventCard;\nvar _c;\n$RefreshReg$(_c, \"EventCard\");","map":{"version":3,"names":["extractImageUrl","description","driveMatch","match","drawingMatch","fileId","cleanDescription","replace","trim","EventCard","event","_event$attachments","_event$attachments$","_event$attachments$$f","summary","start","end","location","startDate","Date","dateTime","date","endDate","formatDate","toLocaleDateString","undefined","weekday","month","day","formatTime","toLocaleTimeString","hour","minute","hour12","imageUrl","attachments","fileUrl","includes","cleanDesc","console","log","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/home/everett/acm-website/src/components/EventCard.js"],"sourcesContent":["const extractImageUrl = (description) => {\n  if (!description) return null;\n\n  // Match Google Drive file links: drive.google.com/file/d/FILE_ID/view\n  const driveMatch = description.match(/https:\\/\\/drive\\.google\\.com\\/file\\/d\\/([\\w-]+)\\/view/);\n\n  // Match Google Drawings links: docs.google.com/drawings/d/FILE_ID/edit\n  const drawingMatch = description.match(/https:\\/\\/docs\\.google\\.com\\/drawings\\/d\\/([\\w-]+)\\/edit/);\n\n  const fileId = driveMatch?.[1] || drawingMatch?.[1];\n  return fileId ? `https://drive.google.com/uc?export=view&id=${fileId}` : null;\n};\n\nconst cleanDescription = (description) => {\n  if (!description) return \"\";\n  // Remove Google Drive and Drawing URLs from the visible text\n  return description\n    .replace(/https:\\/\\/drive\\.google\\.com\\/file\\/d\\/[\\w-]+\\/view[^\\s]*/g, \"\")\n    .replace(/https:\\/\\/docs\\.google\\.com\\/drawings\\/d\\/[\\w-]+\\/edit[^\\s]*/g, \"\")\n    .trim();\n};\n\nconst EventCard = ({ event }) => {\n  const { summary, start, end, description, location } = event;\n\n  const startDate = new Date(start.dateTime || start.date);\n  const endDate = end?.dateTime ? new Date(end.dateTime) : null;\n\n  const formatDate = (date) =>\n    date.toLocaleDateString(undefined, { weekday: \"long\", month: \"long\", day: \"numeric\" });\n\n  const formatTime = (date) =>\n    date ? date.toLocaleTimeString(undefined, { hour: \"numeric\", minute: \"2-digit\", hour12: true }) : \"All day\";\n\n  // const imageUrl = extractImageUrl(description);\n  const imageUrl =\n  extractImageUrl(description) ||\n  (event.attachments?.[0]?.fileUrl?.includes(\"drive.google.com\")\n    ? event.attachments[0].fileUrl.replace(\"open?\", \"uc?export=view&\")\n    : null);\n  const cleanDesc = cleanDescription(description);\n\n  console.log(\"Full event object:\", event);\n\n\n  return (\n    <div className=\"bg-white shadow-lg rounded-2xl p-5 border border-gray-200 mb-4 text-acm-dark-blue\">\n      <h3 className=\"text-xl font-semibold\">{summary}</h3>\n      <p className=\"text-acm-blue\">\n        {formatDate(startDate)}, {formatTime(startDate)}\n        {endDate ? ` - ${formatTime(endDate)}` : \"\"}, {location}\n      </p>\n\n      {imageUrl && (\n        <img\n          src={imageUrl}\n          alt={`${summary} visual`}\n          className=\"mt-3 w-full max-h-60 object-contain rounded-xl\"\n        />\n      )}\n\n      {cleanDesc && <p className=\"mt-2 text-gray-800\">{cleanDesc}</p>}\n    </div>\n  );\n};\n\nexport default EventCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}